{
  "metadata": {
    "title": "A tutorial about Python programming",
    "description": "",
    "topic": "A tutorial about Python programming",
    "created_at": "2025-05-13T02:46:28.923875",
    "updated_at": "2025-05-13T02:48:46.204562",
    "version": "1.0.0"
  },
  "audio": {
    "url": "https://pub-09f5881ec7024e0faaff06eba5fb1e05.r2.dev/tts_output_20250513_024742_u15rt6.wav",
    "duration": 71.82,
    "all_urls": [
      "https://pub-09f5881ec7024e0faaff06eba5fb1e05.r2.dev/tts_output_20250513_024742_u15rt6.wav"
    ],
    "num_chunks": 1,
    "source_word_count": 179
  },
  "script": {
    "full_text": "Want to learn Python fast? This is the easiest way to get started. Python is like giving clear instructions to a computer. You tell it what to do, and it does it perfectly every time. First, install Python from python.org. Then open IDLE, the built-in editor. Now type print followed by your message in quotes. Hit enter and boom, your first program runs. See that text on screen? You just coded. Python reads line by line, top to bottom. Variables store data like boxes holding values. Use equals sign to assign numbers or words. Try name equals your name in quotes. Print name to see it appear. Next, if statements make decisions. If age over 18, print adult, else print minor. That\u2019s logic working. Loops repeat actions, like for counting from 1 to 5. Functions bundle code for reuse, like a recipe you call anytime. Start small, run often, fix errors as you go. In minutes you\u2019ll be automating tasks, analyzing data, even building apps. Python opens endless possibilities with simple readable code. Now go write your next program.",
    "word_count": 179
  },
  "segments": [
    {
      "id": 0,
      "text": "Want to learn Python fast?",
      "start_time": 0.0,
      "end_time": 2.0,
      "duration": 2.0,
      "words": 5,
      "image_prompt": "A vibrant, inviting digital illustration of a computer screen displaying the text 'Want to learn Python fast?' in bold, friendly typography, with a colorful Python logo subtly integrated in the background. The composition is clean and modern, with a focus on legibility and visual appeal to engage the viewer.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 1,
      "text": "This is the easiest way to get started. Python is like giving clear instructions to a computer.",
      "start_time": 2.08,
      "end_time": 7.6,
      "duration": 5.52,
      "words": 17,
      "image_prompt": "An educational diagram-style illustration showing a simple, clear flowchart: on one side, a person giving instructions, and on the other, a computer executing them perfectly. The Python logo bridges the two, symbolizing the language's role as a mediator. The style is minimalist with bright, approachable colors to emphasize clarity and ease.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 2,
      "text": "You tell it what to do, and it does it perfectly every time. First, install Python from Python org, then open Idle, the built in editor. Now type print, followed by your message in quotes.",
      "start_time": 7.68,
      "end_time": 20.465,
      "duration": 12.785,
      "words": 35,
      "image_prompt": "A step-by-step visual guide: (1) A laptop screen showing the Python.org download page, (2) the IDLE editor opening, (3) a close-up of the editor with the text 'print(\"Hello, World!\")' being typed. Each step is clearly numbered and highlighted with a soft glow to draw attention, set against a neutral background for focus.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 3,
      "text": "Hit enter, and boom. Your first program runs. See that text on screen you just coded. Python reads line by line, top to bottom, variables store data like boxes holding values,",
      "start_time": 21.345001,
      "end_time": 32.989998,
      "duration": 11.644997,
      "words": 31,
      "image_prompt": "An animated-style illustration of a computer screen displaying the output 'Hello, World!' after the code is executed. Above the screen, a thought bubble shows lines of code being read top to bottom, with variables represented as labeled boxes containing values. The atmosphere is celebratory, with a subtle confetti effect to mark the first program's success.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 4,
      "text": "use equals sign to assign numbers or words, try name equals your name in quotes, print name to see it appear.",
      "start_time": 33.15,
      "end_time": 40.03,
      "duration": 6.880000000000003,
      "words": 21,
      "image_prompt": "A visual metaphor: a person assigning a name to a variable, depicted as placing a labeled box (with 'name = \"Your Name\"') into a storage shelf. Next to it, the screen shows the output of printing the variable. The style is playful yet informative, with clear symbols and icons to represent coding concepts.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 5,
      "text": "Next, if statements make decisions.",
      "start_time": 40.27,
      "end_time": 41.95,
      "duration": 1.6799999999999997,
      "words": 5,
      "image_prompt": "A decision tree diagram illustrating an 'if statement' concept: a fork in the road with one path labeled 'age > 18' leading to 'print(\"adult\")' and the other leading to 'print(\"minor\")'. The design is simple and intuitive, with bold colors to differentiate paths and outcomes.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 6,
      "text": "If age over 18 print adult else print minor, that's logic working, loops repeat actions, like for counting from one to five, functions,",
      "start_time": 42.965,
      "end_time": 51.925,
      "duration": 8.959999999999994,
      "words": 23,
      "image_prompt": "An infographic showing loops and functions: (1) A circular arrow representing a 'for loop' counting from 1 to 5, with each number appearing sequentially. (2) A 'function' depicted as a recipe card being reused in different contexts. The visual style is cohesive, with icons and minimal text for quick understanding.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 7,
      "text": "bundle code for reuse, like a recipe you call anytime,",
      "start_time": 52.085,
      "end_time": 56.085,
      "duration": 4.0,
      "words": 10,
      "image_prompt": "A conceptual illustration of functions as reusable recipes: a chef's recipe book open to a page titled 'Function', with snippets of code as ingredients. Arrows show the recipe being 'called' in different dishes (programs). The style is whimsical yet clear, emphasizing the utility and reusability of functions.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 8,
      "text": "start small,",
      "start_time": 56.245,
      "end_time": 56.885002,
      "duration": 0.6400020000000026,
      "words": 2,
      "image_prompt": "A minimalist poster with the text 'Start Small' in large, inspiring typography, overlaid on a background of small, interconnected dots symbolizing incremental progress. The color scheme is motivational, with gradients suggesting growth and potential.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 9,
      "text": "Run often. Fix errors as you go.",
      "start_time": 57.34,
      "end_time": 60.06,
      "duration": 2.719999999999999,
      "words": 7,
      "image_prompt": "A dynamic illustration of a coding process: a hand pressing the 'Run' button, with a progress bar quickly filling and a 'Success' message appearing. Error messages are shown as friendly, fixable pop-ups. The atmosphere is positive, emphasizing persistence and learning from mistakes.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 10,
      "text": "In minutes, you'll be automating tasks,",
      "start_time": 60.78,
      "end_time": 63.26,
      "duration": 2.479999999999997,
      "words": 6,
      "image_prompt": "A futuristic scene where a person uses Python to automate tasks: robots performing chores in the background, a calendar auto-updating, and emails being sorted. The style is sleek and modern, highlighting efficiency and the power of automation with Python.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 11,
      "text": "analyzing data,",
      "start_time": 63.34,
      "end_time": 64.62,
      "duration": 1.2800000000000011,
      "words": 2,
      "image_prompt": "A data analysis visualization: graphs and charts magically forming from raw data as Python code runs in the background. The scene is professional yet accessible, with clear visuals to demystify data analysis for beginners.",
      "image_url": null,
      "depth_map_url": null
    },
    {
      "id": 12,
      "text": "even building apps. Python opens endless possibilities with simple, readable code. Now go write your next program.",
      "start_time": 64.62,
      "end_time": 71.82,
      "duration": 7.199999999999989,
      "words": 17,
      "image_prompt": "An inspirational, wide-angle view of a developer at their desk, with a thought bubble showing endless possibilities: apps, games, data visualizations, all stemming from simple Python code. The style is aspirational, with a warm glow to symbolize opportunity and creativity.",
      "image_url": null,
      "depth_map_url": null
    }
  ]
}